@using Blazored.SessionStorage
@using DentistBooking.Data.Enum
@using DentistBooking.ViewModels.System.Bookings
@using DentistBookingBlazor.FE.Services.Bookings
@if (ShowKeyTime)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" style="justify-content: center">
                    <h5 class="modal-title">@KeyTimeTitle</h5>
                </div>
                <div class="modal-body">
                    @KeyTimeMessage
                </div>
                <div>
                    <form style="display: flex;flex-wrap: wrap;gap: 2rem;">

                        @foreach (var item in @KeyTimeList)
                        {

                            if (!postKeyTime.Contains(@item) && !unavailableKeyTime.Contains(@item))
                            {
                                var value = (int)@item;
                                <input id="@item" type="radio" value="@value" name="keytime" @onchange="SelectionChanged">
                                <label for="@item">@item</label>
                                <br />
    
                            }

                        }
                        <input type="submit" @onclick="@OnSubmit" style="display: block; width: fit-content; margin: 0 auto">
                    </form>

                    <button type="button" class="btn btn-secondary" data-dismiss="modal"
                        @onclick="() => Close()">
                        Cancel
                    </button>

                </div>
            </div>
        </div>
    </div>
}

@code {
    public string Selected;
    protected bool ShowKeyTime { get; set; } = false;
    [Inject]
    public ISessionStorageService sessionStorage { get; set; }
    [Inject]
    public IBookingService bookingService { get; set; }

    [Parameter]
    public string KeyTimeTitle { get; set; } = "Key Times";

    [Parameter]
    public string KeyTimeMessage { get; set; } = "Select your appropriate time";

    [Parameter]
    public EventCallback<int> KeyTimeChanged { get; set; }

    [Parameter]
    public List<DentistBooking.Data.Enum.KeyTime> KeyTimeList { get; set; }
    List<DentistBooking.Data.Enum.KeyTime> postKeyTime = new();
    List<DentistBooking.Data.Enum.KeyTime> unavailableKeyTime = new();

    public async void Show()
    {
        ShowKeyTime = true;
        var cart = await sessionStorage.GetItemAsync<CreateBookingRequest>("cart");
        if (cart != null)
        {
            postKeyTime = cart.KeyTimes;
            for (int i = 0; i < cart.ServiceIds.Count; i++)
            {
                var result = await bookingService.GetPostListKeyTime(cart.ClinicId, cart.ServiceIds[i], cart.Date);
                unavailableKeyTime.AddRange(result);
            }
        }

        StateHasChanged();
    }

    protected async Task OnKeyTimeChange(int value)
    {
        ShowKeyTime = false;
        await KeyTimeChanged.InvokeAsync(value);
    }
    protected void Close()
    {
        ShowKeyTime = false;
    }

    public void SelectionChanged(ChangeEventArgs args)
    {
        Selected = args.Value.ToString();
    }

    public void OnSubmit()
    {
        OnKeyTimeChange(int.Parse(Selected));
    }
}
