@page "/discountCreate"
@using DentistBooking.ViewModels.System.Discounts
@using DentistBookingBlazor.FE.Services.Discounts
@inject IDiscountService discountService;
@inject NavigationManager NavigationManager;

<h3>Discount Create</h3>

<EditForm Model="discount" OnValidSubmit="SubmitTask">
    <DataAnnotationsValidator />

    <div class="form-group">

        <label for="Title">Title</label>
        <InputText class="form-control" @bind-Value="discount.Title"></InputText>
        <ValidationMessage For="@(() => discount.Title)" />

        <label for="Start Date">Start Date</label>
        <InputDate class="form-control" asp-for="@discount.StartDate" @bind-Value="discount.StartDate"></InputDate>
        <ValidationMessage For="@(() => discount.StartDate)" />


        <label for="End Date">End Date</label>
        <InputDate class="form-control" asp-for="@discount.EndDate" @bind-Value="discount.EndDate"></InputDate>
        <ValidationMessage For="@(() => discount.EndDate)" />


        <label for="Description">Description</label>
        <InputText class="form-control" @bind-Value="discount.Description"></InputText>
        <ValidationMessage For="@(() => discount.Description)" />


        <label for="Amount">Amount</label>
        <InputNumber class="form-control" asp-for="@discount.Amount" @bind-Value="discount.Amount"></InputNumber>
        <ValidationMessage For="@(() => discount.Amount)" />


        <label for="Percent">Percent</label>
        <InputNumber class="form-control" asp-for="@discount.Percent" @bind-Value="discount.Percent"></InputNumber>
        <ValidationMessage For="@(() => discount.Percent)" />



    </div>

    <button type="submit" class="btn btn-primary">Submit</button>

</EditForm>

@code {
    private DiscountRequest discount = new DiscountRequest();

    private async Task SubmitTask(EditContext context)
    {
        var rs = await discountService.CreateDiscount(discount);
        if (rs)
        {
            NavigationManager.NavigateTo("/discount");
        }
    }
}