@page "/discountUpdate/{DiscountId}"
@using DentistBooking.ViewModels.System.Discounts
@using DentistBookingBlazor.FE.Services.Discounts
@using Microsoft.AspNetCore.Components.Authorization
@inject IToastService ToastService
@inject IDiscountService discountService;

<Authorized Roles="Admin">
    @if (discount == null)
    {
        <div>Loading...</div>
    }
    else
    {
        <h3>Discount Edit: @discount.Title</h3>



        <EditForm Model="discount" OnValidSubmit="SubmitTask">
            <DataAnnotationsValidator />
            <div class="form-group">

                <label for="Title">Title</label>
                <InputText class="form-control" @bind-Value="discount.Title"></InputText>
                <ValidationMessage For="@(() => discount.Title)" />
                <small id="titleHelp" class="form-text text-muted">Please enter discount title here.</small>

                <label for="Start Date">Start Date</label>
                <InputDate class="form-control" asp-for="@discount.StartDate" @bind-Value="discount.StartDate"></InputDate>
                <ValidationMessage For="@(() => discount.StartDate)" />
                <small id="startdateHelp" class="form-text text-muted">Please enter clinic start date here.</small>

                <label for="End Date">End Date</label>
                <InputDate class="form-control" asp-for="@discount.EndDate" @bind-Value="discount.EndDate"></InputDate>
                <ValidationMessage For="@(() => discount.EndDate)" />
                <small id="enddateHelp" class="form-text text-muted">Please enter discount end date here.</small>

                <label for="Description">Description</label>
                <InputText class="form-control" @bind-Value="discount.Description"></InputText>
                <ValidationMessage For="@(() => discount.Description)" />
                <small id="descriptionHelp" class="form-text text-muted">Please enter discount description here.</small>

                <label for="Amount">Amount</label>
                <InputNumber class="form-control" asp-for="@discount.Amount" @bind-Value="discount.Amount"></InputNumber>
                <ValidationMessage For="@(() => discount.Amount)" />
                <small id="amountHelp" class="form-text text-muted">Please enter discount amount here.</small>


            </div>

            <button type="submit" class="btn btn-primary">Submit</button>

        </EditForm>
    }
</Authorized>

@code {
    [Parameter]
    public string DiscountId { get; set; }

    private DiscountRequest discount;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }
    protected async override Task OnInitializedAsync()
    {
        var authenticationState = await authenticationStateTask;

        if (!authenticationState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/Error");
        }
        if (!authenticationState.User.IsInRole("Admin"))
        {
            NavigationManager.NavigateTo("/Error");
        }
        var DiscountDTO = await discountService.GetDiscount(Int32.Parse(DiscountId));
        discount = new DiscountRequest();
        discount.Id = Int32.Parse(DiscountId);
        discount.Title = DiscountDTO.Title;
        discount.StartDate = DiscountDTO.StartDate;
        discount.EndDate = DiscountDTO.EndDate;
        discount.Description = DiscountDTO.Description;
        discount.Amount = DiscountDTO.Amount;
        discount.Percent = DiscountDTO.Percent;

    }

    private async void SubmitTask(EditContext context)
    {
        var rs = await discountService.UpdateDiscount(discount);
        if (rs)
        {
            ToastService.ShowSuccess("Update succesffuly", "Success");
            NavigationManager.NavigateTo("/discount");
        }
        else
        {
            ToastService.ShowError("Update failed", "Failed");

        }
    }
}
