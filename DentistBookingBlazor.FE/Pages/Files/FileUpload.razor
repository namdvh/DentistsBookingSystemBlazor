@page "/fileupload"
@using System.IO
@inject HttpClient httpClient
<h3>Upload File</h3>
<form @onsubmit="@UploadFile" enctype="multipart/form-data">
    <InputFile OnChange="@SelectFile"/>
    <input type="submit" value="Upload"> 
    <img src="@imgUrl">
</form>
@code {
    private StreamContent fileContent;
    private string fileName;
    private string imgUrl;
    private string imageType;
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task UploadFile()
    {
      // Provides a container for content encoded using multipart/form-data MIME type.
      using var content = new MultipartFormDataContent();
      content.Add
      (content: fileContent,name: "\"file\"",fileName:fileName);
      var response = 
                await httpClient.PostAsync
                ("/api/FileUpload/file/upload", 
                content);
    }

    private async Task SelectFile(InputFileChangeEventArgs  e)
    {
       // setting the max size for the file 
       long maxFileSize = 1024 * 1024 * 10;
       // Provide the HTTP Content based Stream
       // and open the stream for reading the uploaded file
       fileContent = new StreamContent(e.File.OpenReadStream(maxFileSize));
       // read file name
       fileName = e.File.Name;

       var fileSize = new byte[e.File.Size];
       // read the file bytes in sequence
       await e.File.OpenReadStream().ReadAsync(fileSize);
       // read file content type
       imageType = e.File.ContentType;
       // create URL
       imgUrl = $"data:{imageType};base64,{Convert.ToBase64String(fileSize)}";

       this.StateHasChanged();
    }   
}